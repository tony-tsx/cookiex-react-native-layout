import Event from '.';
import { ViewProps } from 'react-native';
declare const view: <P extends Event.View>({ layout, ...one }: P) => {
    events: ViewProps & import("react-native").GestureResponderHandlers & import("react-native").AccessibilityProps & import("react-native").Touchable;
    props: Pick<Pick<Pick<Pick<P, Exclude<keyof P, "layout">>, Exclude<Exclude<keyof P, "layout">, "moveShouldSetResponder" | "moveShouldSetResponderCapture" | "responderEnd" | "responderGrant" | "responderMove" | "responderReject" | "responderRelease" | "responderStart" | "responderTerminate" | "responderTerminationRequest" | "startShouldSetResponder" | "startShouldSetResponderCapture">>, Exclude<Exclude<Exclude<keyof P, "layout">, "moveShouldSetResponder" | "moveShouldSetResponderCapture" | "responderEnd" | "responderGrant" | "responderMove" | "responderReject" | "responderRelease" | "responderStart" | "responderTerminate" | "responderTerminationRequest" | "startShouldSetResponder" | "startShouldSetResponderCapture">, "magicTap" | "accessibilityAction" | "accessibilityTap">>, Exclude<Exclude<Exclude<Exclude<keyof P, "layout">, "moveShouldSetResponder" | "moveShouldSetResponderCapture" | "responderEnd" | "responderGrant" | "responderMove" | "responderReject" | "responderRelease" | "responderStart" | "responderTerminate" | "responderTerminationRequest" | "startShouldSetResponder" | "startShouldSetResponderCapture">, "magicTap" | "accessibilityAction" | "accessibilityTap">, "touchCancel" | "touchEnd" | "touchEndCapture" | "touchMove" | "touchStart">>;
};
export default view;
